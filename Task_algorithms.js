"use strict";
function is_sum_present(arr,sum){
    let res=[]
    let i_first=0
    let i_last=arr.length-1
    while(i_first!=i_last){
        if(arr[i_first]+arr[i_last]==sum){
            res.push(i_first)
            res.push(i_last)
            return res
        }
        if(arr[i_first]+arr[i_last]>sum){
            i_last--
        }else{
            i_first++
        }
        
    }
    return res

}
/**
 * Этот алгоритм поиска двух чисел, сумма которых равна заданному числу в отсортированном по возростанию массиве работает следующим образом.
 * -В начале задаётся 2 целочисленных элемента - индекса, первый из них равен нулю, то есть, индексу начального( а также минимального ) элемента,
 * а второй - индексу последнего и максимального элемента в массиве. Также задаётся пустой массив, в который будут помещены индексы искомых элементов массива, 
 * сумма которых равна заданному числу.
 * -Затем берётся сумма элементов, соответствующих этим индексам и сравнивается с  нужным значением суммы двух элементов массива.
 * Если эта сумма оказалась меньше нужного значения, то из второго индекса(того,который соответствовал последнему элементу) вычитается 1, таким образом  и сама сумма становится меньше 
 * ( что логично, так как наш массив упорядочен по возрастанию элементов).
 * Если же эта сумма наоброт оказалась меньше нужного значения, то к первому из заданных в начале индексов прибавляется 1,что увеличит её.
 * Если же эта сумма оказалась равной нужному значению, то эти 2 индекса добавляются в результирующий пустой массив и он возвращается в качестве значения функции.
 * Увеличение первого и уменьшение второго индекса по описанному выше принципу  продолжается до тех пор, 
 * пока сумма элементов ,соответствующих этим индексам, не будет равна нужному значению
 * или пока сами индексы не будут равны друг другу(то есть, не будут указывать на один и тот же элемент), в случае чего возвращается пустой массив,
 * в который так и не было добавлено ни одного элемента.
 */

console.log(is_sum_present([1,2,3,4,5,6],11))
console.log(is_sum_present([1,2,3,4,5,6],3))
console.log(is_sum_present([-8,-5,-3,5,8,11,13],0))
console.log(is_sum_present([-8,-5,-3,5,8,11,13],18))
console.log(is_sum_present([-3,12],9))
console.log(is_sum_present([-3,12],0))
console.log(is_sum_present([-13,-7,-5,-3,5,8,11,13],2))
console.log(is_sum_present([-13,-7,-5,-3,5,8,11,13],-1))
